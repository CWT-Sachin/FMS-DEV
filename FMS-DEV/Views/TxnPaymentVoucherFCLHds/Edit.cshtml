@model FMS_DEV.ViewModel.PayVoucherFCLViewModel

@{
    ViewData["Title"] = "Edit";
    //Pager pager = new Pager();
    //int pageNo = 0;
    //if (ViewBag.Pager != null)
    //{
    //    pager = ViewBag.Pager;
    //    pageNo = pager.CurrentPage;
    //}
}
<!-- ============================================================== -->
<!-- Main wrapper - style you can find in pages.scss -->
<!-- ============================================================== -->
<div id="main-wrapper">
    <!-- ============================================================== -->
    <!-- Page wrapper  -->
    <!-- ============================================================== -->
    <div class="page-wrapper">
        <!-- ============================================================== -->
        <!-- Container fluid  -->
        <!-- ============================================================== -->
        <div class="container-fluid">

            <div class="card">
                <div class="card-header bg-info">
                    <h3 class="m-b-0 text-white">PAYEMENT VOUCHER - FCL- EDIT</h3>               
                    </div>

                <div class="card-body">
                    <!--Job Details-->
                    <div class="row">
                        <div class="col-md-6">
                            <b>Job Details</b>
                        </div>
                        <div class="col-md-6"></div>
                    </div>

                    <div style="border:1px  solid black; padding: 10px 10px 10px 10px; background-color:#E5F2FB; border-radius:10px;">

                        <!--Job No & Date-->
                        <div class="row">
                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-2">
                                        <label for="Job No">Job No.</label>
                                    </div>
                                    <div class="col-md-7">
                                        <span id="jobno">
                                            @Html.DisplayFor(m => Model.FCLJobMulti.FirstOrDefault().JobNo)
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-2">
                                        <label for="Date">Date</label>
                                    </div>
                                    <div class="col-md-5">
                                        @Html.DisplayFor(m => Model.FCLJobMulti.FirstOrDefault().Date)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4"></div>

                        </div><br />

                        <!--Sales Person-->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-2">
                                        <label for="Sales Person">Voyage</label>
                                    </div>
                                    <div class="col-md-5">
                                        @Html.DisplayFor(m => Model.FCLJobMulti.FirstOrDefault().Voyage)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6"></div>
                        </div>
                        <hr>

                        <!--Vessel ,ETD (Date) & Shipper-->
                        <div class="row">

                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="Vessel">Vessel</label>
                                    </div>
                                    <div class="col-md-6">
                                        @Html.DisplayFor(m => Model.FCLJobMulti.FirstOrDefault().VesselId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="ETD (Date)">Agent</label>
                                    </div>
                                    <div class="col-md-6">
                                        @Html.DisplayFor(m => Model.FCLJobMulti.FirstOrDefault().AgentId)

                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="Shipper">Shipper</label>
                                    </div>
                                    <div class="col-md-6">
                                        @Html.DisplayFor(m => Model.FCLJobMulti.FirstOrDefault().ShipperID)
                                    </div>
                                </div>
                            </div>

                        </div><br />

                        <!--Final Destination & Consignee-->
                        <div class="row">

                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="Final Destination">Final Destination</label>
                                    </div>
                                    <div class="col-md-6">
                                        @Html.DisplayFor(m => Model.FCLJobMulti.FirstOrDefault().POD)
                                    </div>
                                </div>
                            </div>


                        </div><br />
                    </div>
                    

                    <form asp-action="Edit" id="PaymentVoucherHdFrom">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().PayVoucherNo" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().JobNo" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().CreatedBy" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().CreatedDateTime" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().Canceled" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().Approved" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().DebitAcc" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().CreditAcc" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().AmountPaid" />
                        <input type="hidden" asp-for="PayVoucherHdMulti.FirstOrDefault().AmountToBePaid" />
                        <!--Credit Note-->
                        <div class="row">
                            <div class="col-md-6">
                                <h4>
                                    Payment Vocher
                                </h4>
                            </div>
                            <div class="col-md-6"></div>
                        </div>

                        <!--Credit Note No.,Date,PO Agent & Exchange Rate-->
                        <!--Invoice NO,Date,Customer & Exchange Rate-->
                        <div class="row">


                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-4">
                                        <label for="Date ">Date </label>
                                    </div>
                                    <div class="col-md-8">
                                        <input type="date" asp-for="PayVoucherHdMulti.FirstOrDefault().Date" class="form-control" asp-format="{0:yyyy-MM-dd}" />
                                        <span asp-validation-for="PayVoucherHdMulti.FirstOrDefault().Date" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-4">
                                        <input type="radio" id="Overseas" name="Location" value="Overseas" checked />
                                        <label for="Overseas">Overseas</label>
                                    </div>
                                    <div class="col-md-4">
                                        <input type="radio" id="Local" name="Location" value="Local" />
                                        <label for="Local">Local</label>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-4">
                                        <label for="Exchange Rate">Exchange Rate</label>
                                    </div>
                                    <div class="col-md-8">
                                        <input type="text" asp-for="PayVoucherHdMulti.FirstOrDefault().ExchangeRate" class="form-control" />
                                        <span asp-validation-for="PayVoucherHdMulti.FirstOrDefault().ExchangeRate" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                        </div><br />
                        <br />
                        <div class="col-md-4">
                            <div id="localDropdown" class="row" style="display:none;">
                                <div class="col-md-4">
                                    <label for="Customer">Shipping Line</label>
                                </div>
                                <div class="col-md-8">
                                    <select id="ShippingLine" asp-for="PayVoucherHdMulti.FirstOrDefault().Customer" class="form-control" asp-items="ViewBag.ShippingLine"></select>
                                </div>
                            </div>
                            <div id="overseasDropdown" class="row">
                                <div class="col-md-4">
                                    <label for="Customer">PO Agent</label>
                                </div>
                                <div class="col-md-8">
                                    <select id="POAgent" asp-for="PayVoucherHdMulti.FirstOrDefault().AgentID" class="form-control" asp-items="ViewBag.AgentIDNomination"></select>
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-4">
                            </div>

                            <div class="col-md-4">
                            </div>

                            <div class="col-md-4">
@*                                <div class="row">
                                    <div class="col-md-4">
                                        <label for="Customer">Debit Acc</label>
                                    </div>
                                    <div class="col-md-8">
                                        <select id="IntendedVessel" asp-for="PayVoucherHdMulti.FirstOrDefault().DebitAcc" class="form-control" asp-items="ViewBag.AccountsCodes"></select>
                                    </div>
                                </div>*@
                            </div>
                        </div>
                        <br />
                        <div class="row">

                            <div class="col-md-4">
                            </div>

                            <div class="col-md-4">
                            </div>

                            <div class="col-md-4">
@*                                <div class="row">
                                    <div class="col-md-4">
                                        <label for="Customer">Credit Acc</label>
                                    </div>
                                    <div class="col-md-8">
                                        <select id="IntendedVessel" asp-for="PayVoucherHdMulti.FirstOrDefault().CreditAcc" class="form-control" asp-items="ViewBag.AccountsCodes"></select>
                                    </div>
                                </div>*@
                            </div>
                        </div>
                        <!--Table for Charge Items --><br />
                        <di class="row">
                            <div class="col-md-1">
                                <label for="payment currency">Payment Currency</label>
                            </div>
                            <div class="col-md-2">
                                <select asp-for="PayVoucherHdMulti.FirstOrDefault().PayCurrency" class="form-control" asp-items="ViewBag.paymentcurrencyList"></select>
                            </div>
                            <div class="col-md-7"></div>
                        </di  v>
                        <!--Table for Charge Items --><br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-hover border table-striped" id="tblContainer">
                                        <thead>
                                            <tr>
                                                <th>BL/Container No</th>
                                                <th>Charge Item</th>
                                                <th>Unit</th>
                                                <th>Rate </th>
                                                <th>Currency</th>
                                                <th>Qty</th>
                                                <th>Amount</th>
                                            </tr>

                                        </thead>

                                        <tbody id="ContainerDetailsBody">
                                            <tr id="tablerow0" hidden>
                                                <td> <input type="text" id="Bcn" asp-for="PayVoucherDtlMulti.FirstOrDefault().BlContainerNo" name="Bcn" value="" class="form-control"></td>
                                                <td style="width:30%;"> <select id="ChargeItemRw" asp-for="PayVoucherDtlMulti.FirstOrDefault().ChargeItem" value="" name="ChargeItemRw" class="form-control" asp-items="ViewBag.ChargeItemsList"></select> </td>
                                                <td style="width:10%;"> <select id="Unit" asp-for="PayVoucherDtlMulti.FirstOrDefault().Unit" value="" name="Unit" class="form-control" asp-items="ViewBag.UnitList"></select> </td>
                                                <td style="width:10%;"> <input type="text" id="Rate" asp-for="PayVoucherDtlMulti.FirstOrDefault().Rate" name="Rate" value="" class="form-control" onchange="calculateAmount(this)"></td>
                                                <td> <select id="Currency" asp-for="PayVoucherDtlMulti.FirstOrDefault().Currency" value="" name="Currency" class="form-control" asp-items="ViewBag.CurrencyList"></select> </td>
                                                <td> <input type="text" id="Qty" asp-for="PayVoucherDtlMulti.FirstOrDefault().Qty" name="Qty" value="" class="form-control" onchange="calculateAmount(this)"></td>
                                                <td> <input type="text" id="Amount" asp-for="PayVoucherDtlMulti.FirstOrDefault().Amount" name="Amount" value="" class="form-control" readonly></td>
                                                <td> <input type="button" id="btnRemove" class="btn btn-danger" value="X" name="RemoveBttn" onclick="RemoveRow(this)" /></td>
                                            </tr>
                                            @{
                                                var i = 0;
                                                @foreach (var item in Model.PayVoucherDtlMulti)
                                                {
                                                    i++;
                                                    <tr id="tablerow_@i">
                                                        <td> <input type="text" id="Bcn" asp-for="@item.BlContainerNo" name="Bcn" value="@item.BlContainerNo" class="form-control"></td>
                                                        <td> <select id="ChargeItemRw" asp-for="@item.ChargeItem" value="@item.ChargeItem" name="ChargeItemRw" class="form-control" asp-items="ViewBag.ChargeItemsList"></select> </td>
                                                        <td> <select type="text" id="UnitRw" asp-for="@item.Unit" name="UnitRw" value="@item.Unit" class="form-control" asp-items="ViewBag.UnitList"></select></td>
                                                        <td> <input type="text" id="Rate" asp-for="@item.Rate" name="Rate" value="@item.Rate" class="form-control"></td>
                                                        <td> <select type="text" id="Currency" asp-for="@item.Currency" name="Currency" value="@item.Currency" class="form-control" asp-items="ViewBag.CurrencyList"></select></td>
                                                        <td> <input type="text" id="Qty" asp-for="@item.Qty" name="Qty" value="@item.Qty" class="form-control"></td>
                                                        <td> <input type="text" id="Amount" asp-for="@item.Amount" name="Amount" value="@string.Format("{0:F2}", item.Amount)" class="form-control" readonly></td>
                                                        <td><input type="button" id="btnRemove" class="btn btn-danger" value="X" name="RemoveBttn" onclick="RemoveRow(@i)"> </td>
                                                    </tr>

                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!--Add button Charge Items-->
                            <div class="col-md-4">
                                <div class="form-group">

                                    <input id="add" type="button" value="+ Charge Item" onclick="AddRow(this)"
                                           class="btn btn-success" />
                                </div>
                            </div>
                            <div class="col-md-3"></div>
                            <!--Total LKR-->
                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="TotalAmount">Total Amount LKR:</label>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="text" asp-for="PayVoucherHdMulti.FirstOrDefault().TotalPayVoucherAmountLkr" class="form-control" id="TotalAmtLKR" readonly />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="TotalAmount">Total Amount USD:</label>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="text" asp-for="PayVoucherHdMulti.FirstOrDefault().TotalPayVoucherAmountUsd" class="form-control" id="TotalAmtUSD" readonly />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1"></div>
                        </div>

                        <!--Remarks Textbox-->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <h6 class="box-title">Remarks</h6>
                                    <div class="col-md-12">
                                        <textarea asp-for="PayVoucherHdMulti.FirstOrDefault().Remarks" class="form-control" name="Remarks" type="text" placeholder="Type here your Remarks" rows="5"> </textarea>
                                        @* <input asp-for="BLTypeID" class="form-control" />*@
                                        <span asp-validation-for="PayVoucherHdMulti.FirstOrDefault().Remarks" class="text-danger"></span>

                                    </div>
                                </div>
                            </div>

                        </div><br />

                        <!--Save Button-->
                        <div class="row">
                            <div class="form-group">
                                <input type="hidden" id="locationInput" name="Type" value="">
                                <input hidden type="text" asp-for="PayVoucherHdMulti.FirstOrDefault().JobNo" value="@Model.FCLJobMulti.FirstOrDefault()?.JobNo" class="form-control" />
                                <input type="hidden" id="dtlItemsList" name="dtlItemsList" />
                                <input type="submit" value="Save" onclick="submitForm(this)" class="btn btn-primary" />
                            </div>
                        </div>
                    </form>
                </div>

            </div>

        </div>

        <div>
            <a asp-action="Index">Back to List</a>
        </div>
        <!-- ============================================================== -->
        <!-- Orginal details End -->
        <!-- ============================================================== -->
    </div>
    <!-- ============================================================== -->
    <!-- Container fluid  END -->
    <!-- ============================================================== -->

</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Initially hide both dropdowns
        $('#localDropdown').hide();
        $('#overseasDropdown').hide();

        // Check the value of Type and show/hide dropdowns accordingly
        var type = '@(Model.PayVoucherHdMulti.FirstOrDefault().Type)';
        if (type === 'Local') {
            $('#localDropdown').show();
            //$('#ShippingLine').prop('disabled', true); // Disable ShippingLine dropdown
            $('#Local').prop('checked', true); // Check Local radio button
        } else if (type === 'Overseas') {
            $('#overseasDropdown').show();
            //$('#POAgent').prop('disabled', true); // Disable POAgent dropdown
            $('#Overseas').prop('checked', true); // Check Overseas radio button
        }
        // this is only for edit mode
        // If user do not change te existing values assign to Type (LocationInput)
        var overseasRadio = document.getElementById("Overseas");
        var localRadio = document.getElementById("Local");
        var locationInput = document.getElementById("locationInput");
        if (overseasRadio.checked) {
            locationInput.value = overseasRadio.value;
        }
        else {
            if (localRadio.checked) {
                locationInput.value = localRadio.value;
            }
        }
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var overseasRadio = document.getElementById("Overseas");
        var localRadio = document.getElementById("Local");
        var locationInput = document.getElementById("locationInput");

        overseasRadio.addEventListener("change", function () {
            if (overseasRadio.checked) {
                locationInput.value = overseasRadio.value;
            }
        });

        localRadio.addEventListener("change", function () {
            if (localRadio.checked) {
                locationInput.value = localRadio.value;
            }
        });
    });
</script>


<script>
    $(document).ready(function () {
        // Initially hide both dropdowns
        //$('#localDropdown').hide();
        //$('#overseasDropdown').hide();

        // Handle Local radio button click
        $('#Local').click(function () {
            $('#localDropdown').show();
            $('#overseasDropdown').hide();
            $('#ShippingLine').prop('disabled', false);
            $('#POAgent').prop('disabled', true);
        });

        // Handle Overseas radio button click
        $('#Overseas').click(function () {
            $('#overseasDropdown').show();
            $('#localDropdown').hide();
            $('#POAgent').prop('disabled', false);
            $('#ShippingLine').prop('disabled', true);
        });
    });
</script>

@*<script>
    document.addEventListener("DOMContentLoaded", function () {
        var overseasRadio = document.getElementById("Overseas");
        var localRadio = document.getElementById("Local");
        var overseasDropdown = document.getElementById("overseasDropdown");
        var localDropdown = document.getElementById("localDropdown");
        var poAgentDropdown = document.getElementById("POAgent");
        var shippingLineDropdown = document.getElementById("ShippingLine");

        overseasRadio.addEventListener("change", function () {
            if (overseasRadio.checked) {
                overseasDropdown.style.display = "flex";
                localDropdown.style.display = "none";
                // Set shipping line dropdown value to null
                shippingLineDropdown.value = "";
            }
        });

        localRadio.addEventListener("change", function () {
            if (localRadio.checked) {
                overseasDropdown.style.display = "none";
                localDropdown.style.display = "flex";
                // Set PO Agent dropdown value to null
                poAgentDropdown.value = "";
            }
        });
    });
</script>*@
<script>
    // Create and submit Charge Items

    function submitForm(e) {

        const dtlItemsArray = [];
        const tableRows = $("#tblContainer tbody tr");
        var chkAmount = "";

        tableRows.each(function (index) {
            const trRow = $(this);
            chkAmount = trRow.find('input[name="Amount"]').val();

            if (chkAmount === "" || parseFloat(chkAmount) === 0) {
                // chkAmount is empty or zero
                //console.log("chkAmount is empty or zero");
            } else {
                // chkAmount is not empty and not zero
                const dtlItemJson = buildItemsJson(trRow, index);
                dtlItemsArray.push(dtlItemJson);
            }
        });

        $("#dtlItemsList").val(JSON.stringify(dtlItemsArray));
        var jobNo = JobHdMulti.FirstOrDefault().JobNo;
        alert("jobNo: " + jobNo);

        // Assign the value to the hidden input field using jQuery
        $('#invoiceJobNo').val(jobNo);
    }

    // Json Var create
    function buildItemsJson(trRow, id) {
        return {
            SerialNo: id,
            Description: trRow.find('input[name="Description"]').val(),
            Amount: trRow.find('input[name="Amount"]').val(),
        };
    }
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Enter key blocking from submitig
        document.getElementById("PaymentVoucherHdFrom").onkeypress = function (e) {

            preventEnterSubmit(e);
        }

    </script>
    <script>
        function preventEnterSubmit(e) {
            // Enter Key
            if (e.which == 13) {
                var $targ = $(e.target);
                // alert(" Enter Key !" );
                if (!$targ.is("textarea") && !$targ.is(":button,:submit")) {
                    //alert(" Not Textarea !");
                    e.preventDefault();
                }

            }
        }
    </script>
    <script type="text/javascript">

        $(document).ready(function () {
            // Attach event listeners to input fields for real-time updates
            $("#tblContainer tbody").on('input', 'input[name="Rate"], input[name="Qty"]', function () {
                calculateAmount($(this).closest('tr'));
            });

            // Ensure that event listeners are attached when the document is ready
            attachEventListeners();
        });

        function AddRow() {
            var newRow = $("#tblContainer tbody tr").first().clone();
            newRow.removeAttr("hidden");

            // Update remove Button
            var counter = $("#tblContainer tbody tr").length + 1;
            var removeBtn = newRow.find('input[name="RemoveBttn"]');
            var RemoveBtnVal = 'RemoveRow(' + counter + ')';
            removeBtn.attr('onclick', RemoveBtnVal);

            // Update Row id (for remove)
            newRow.attr("id", "tablerow_" + counter);

            // Reset values in the cloned row
            newRow.find('input[type="text"]').val('');

            // Add/append new row to the table
            $("#tblContainer tbody").append(newRow);

            // Attach event listeners after adding a new row
            attachEventListeners();

            return false;
        }

        function RemoveRow(index) {
            $('#tablerow_' + index).remove();
            calculateTotalAmount();
            return false;
        }

        function attachEventListeners() {
            // Attach event listeners to input fields for real-time updates
            $("#tblContainer tbody").on('input', 'input[name="Rate"], input[name="Qty"]', function () {
                calculateAmount($(this).closest('tr'));
            });
        }

    </script>
    <script>
        // Create and submit Charge Items

        function submitForm(e) {

            const dtlItemsArray = [];
            const tableRows = $("#tblContainer tbody tr");
            var chkAmount = "";

            tableRows.each(function (index) {
                //alert("Test in tbl ROW");
                const trRow = $(this);
                chkAmount = trRow.find('input[name="Amount"]').val();
                // Check if chkAmount is empty or zero
                if (chkAmount === "" || parseFloat(chkAmount) === 0) {
                    // chkAmount is empty or zero
                    //console.log("chkAmount is empty or zero");
                } else {
                    // chkAmount is not empty and not zero
                    const dtlItemJson = buildItemsJson(trRow, index);
                    dtlItemsArray.push(dtlItemJson);
                }
            });
            $("#dtlItemsList").val(JSON.stringify(dtlItemsArray));
        }
        // Json Var create
        function buildItemsJson(trRow, id) {
            return {
                SerialNo: id,
                BlContainerNo: trRow.find('input[name="Bcn"]').val(),
                ChargeItem: trRow.find('select[name="ChargeItemRw"]').val(),
                Unit: trRow.find('select[name="UnitRw"]').val(),
                Rate: trRow.find('input[name="Rate"]').val(),
                Currency: trRow.find('select[name="Currency"]').val(),
                Qty: trRow.find('input[name="Qty"]').val(),
                Amount: trRow.find('input[name="Amount"]').val(),
            };
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Add event listener to the parent table
            var containerTable = document.querySelector("#ContainerDetailsBody");
            containerTable.addEventListener("input", function (event) {
                var target = event.target;

                // Check if the input is in a row and has the relevant IDs
                if (target.closest("tr") && (target.id === "Rate" || target.id === "Qty" || target.id === "Currency")) {
                    calculateAmount(target);
                }
            });

            containerTable.addEventListener("change", function (event) {
                var target = event.target;

                // Check if the change event is for the Currency dropdown
                if (target.closest("tr") && target.id === "Currency") {
                    calculateTotalAmount();
                }
            });

            // Add event listeners to all remove buttons
            var removeButtons = document.querySelectorAll("#ContainerDetailsBody #btnRemove");
            removeButtons.forEach(function (button) {
                button.addEventListener("click", function () {
                    // Remove the row and recalculate total amount
                    var row = this.parentNode.parentNode;
                    row.parentNode.removeChild(row);
                    calculateTotalAmount();
                });
            });
        });

        function calculateAmount(element) {
            // Calculate amount for the current row
            var row = element.closest("tr");
            var rate = parseFloat(row.querySelector("#Rate").value);
            var qty = parseFloat(row.querySelector("#Qty").value);
            var amount = rate * qty;

            if (!isNaN(amount)) {
                row.querySelector("#Amount").value = amount.toFixed(2);
            }

            // Calculate total amount for all rows
            calculateTotalAmount();
        }

        function calculateTotalAmount() {
            // Calculate total amount for all rows
            var totalAmount = 0;
            var totalUSD = 0;
            var totalLKR = 0;
            var exchangeRate = parseFloat(document.querySelector("#ExchangeRate").value);

            var rows = document.querySelectorAll("#ContainerDetailsBody tr");

            rows.forEach(function (row) {
                var amount = parseFloat(row.querySelector("#Amount").value);
                var currency = row.querySelector("#Currency").value;

                if (!isNaN(amount)) {
                    totalAmount += amount;

                    if (currency === "USD") {
                        totalUSD += amount;
                        totalLKR += amount * exchangeRate;
                    } else if (currency === "LKR") {
                        totalLKR += amount;
                        totalUSD += amount / exchangeRate;
                    }
                }
            });

            // Set the total amount in the TotalAmt input field
            document.querySelector("#TotalAmtLKR").value = totalLKR.toFixed(2);
            document.querySelector("#TotalAmtUSD").value = totalUSD.toFixed(2);
        }
    </script>




}
